{"ast":null,"code":"var _jsxFileName = \"/Users/2arth/Desktop/movierank/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [filterType, setFilterType] = useState('');\n  const [filterDate, setFilterDate] = useState('');\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/kimyih/movie-chart2/main/Megabox/MegaboxChart_2024-05-10.json').then(response => response.json()).then(data => {\n      console.log('Fetched data:', data); // 콘솔에 데이터 로깅\n      setData(data);\n    }).catch(error => {\n      console.error(\"There was an error fetching the data!\", error);\n    });\n  }, []);\n  const filteredData = data.filter(item => {\n    return (filterType ? item.type === filterType : true) && (filterDate ? item.date === filterDate : true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data from JSON File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Filter by Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: filterType,\n          onChange: e => setFilterType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Filter by Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filterDate,\n          onChange: e => setFilterDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.date, \" - \", item.type, \" - \", item.value]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"h0OQLG5ztKAccHZ8j3Iqmz4glcQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","data","setData","filterType","setFilterType","filterDate","setFilterDate","fetch","then","response","json","console","log","catch","error","filteredData","filter","item","type","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","index","_c","$RefreshReg$"],"sources":["/Users/2arth/Desktop/movierank/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n    const [data, setData] = useState([]);\n    const [filterType, setFilterType] = useState('');\n    const [filterDate, setFilterDate] = useState('');\n\n    useEffect(() => {\n        fetch('https://raw.githubusercontent.com/kimyih/movie-chart2/main/Megabox/MegaboxChart_2024-05-10.json')\n            .then(response => response.json())\n            .then(data => {\n                console.log('Fetched data:', data); // 콘솔에 데이터 로깅\n                setData(data);\n            })\n            .catch(error => {\n                console.error(\"There was an error fetching the data!\", error);\n            });\n    }, []);\n\n    const filteredData = data.filter(item => {\n        return (filterType ? item.type === filterType : true) &&\n            (filterDate ? item.date === filterDate : true);\n    });\n\n    return (\n        <div className=\"App\">\n            <h1>Data from JSON File</h1>\n\n            <div>\n                <label>\n                    Filter by Type:\n                    <input\n                        type=\"text\"\n                        value={filterType}\n                        onChange={(e) => setFilterType(e.target.value)}\n                    />\n                </label>\n            </div>\n\n            <div>\n                <label>\n                    Filter by Date:\n                    <input\n                        type=\"date\"\n                        value={filterDate}\n                        onChange={(e) => setFilterDate(e.target.value)}\n                    />\n                </label>\n            </div>\n\n            <ul>\n                {filteredData.map((item, index) => (\n                    <li key={index}>{item.date} - {item.type} - {item.value}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}