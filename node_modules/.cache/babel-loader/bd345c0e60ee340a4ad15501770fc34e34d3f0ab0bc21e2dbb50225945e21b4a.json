{"ast":null,"code":"var _jsxFileName = \"/Users/2arth/Desktop/movierank/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst urlPatterns = {\n  CGV: `${company}/${company}Chart_${date}.json`,\n  CineQ: `${company}/${company}Chart_${date}.json`,\n  Moviechart: `${company}/${company}Chart_${date}.json`,\n  Serieson: `${company}/serieson_chart${date}.json`,\n  Megabox: `${company}/${company}Chart_${date}.json` // 메가박스 패턴 추가\n};\nfunction generateUrl(company, date) {\n  const formattedDate = date.toISOString().slice(0, 10).replace(/-/g, '-');\n  const pattern = urlPatterns[company];\n  const url = `https://raw.githubusercontent.com/kimyih/movie-chart2/main/${pattern.replace('${company}', company).replace('${date}', formattedDate)}`;\n  return url;\n}\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedCardCompany, setSelectedCardCompany] = useState('CGV');\n  const [selectedDate, setSelectedDate] = useState(new Date('2024-05-10'));\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = generateUrl(selectedCardCompany, selectedDate);\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error(\"There was an error fetching the data:\", error);\n      }\n    };\n    fetchData();\n  }, [selectedCardCompany, selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data from External JSON File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Card Company:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCardCompany,\n          onChange: e => setSelectedCardCompany(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CGV\",\n            children: \"CGV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CineQ\",\n            children: \"CineQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Moviechart\",\n            children: \"Moviechart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Serieson\",\n            children: \"Serieson\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Megabox\",\n            children: \"Megabox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate.toISOString().slice(0, 10),\n          onChange: e => setSelectedDate(new Date(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.imageURL,\n          alt: item.title,\n          width: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Rank: \", item.rank]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Date: \", item.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Rate: \", item.rate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Title: \", item.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"N0ehMAvvSwWN3x5X6PwaFm6iBs0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","urlPatterns","CGV","company","date","CineQ","Moviechart","Serieson","Megabox","generateUrl","formattedDate","toISOString","slice","replace","pattern","url","App","_s","data","setData","selectedCardCompany","setSelectedCardCompany","selectedDate","setSelectedDate","Date","fetchData","response","fetch","ok","Error","status","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","map","item","index","src","imageURL","alt","title","width","rank","rate","_c","$RefreshReg$"],"sources":["/Users/2arth/Desktop/movierank/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst urlPatterns = {\n    CGV: `${company}/${company}Chart_${date}.json`,\n    CineQ: `${company}/${company}Chart_${date}.json`,\n    Moviechart: `${company}/${company}Chart_${date}.json`,\n    Serieson: `${company}/serieson_chart${date}.json`,\n    Megabox: `${company}/${company}Chart_${date}.json` // 메가박스 패턴 추가\n};\n\nfunction generateUrl(company, date) {\n    const formattedDate = date.toISOString().slice(0, 10).replace(/-/g, '-');\n    const pattern = urlPatterns[company];\n    const url = `https://raw.githubusercontent.com/kimyih/movie-chart2/main/${pattern.replace('${company}', company).replace('${date}', formattedDate)}`;\n    return url;\n}\n\nfunction App() {\n    const [data, setData] = useState([]);\n    const [selectedCardCompany, setSelectedCardCompany] = useState('CGV');\n    const [selectedDate, setSelectedDate] = useState(new Date('2024-05-10'));\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const url = generateUrl(selectedCardCompany, selectedDate);\n\n            try {\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                setData(data);\n            } catch (error) {\n                console.error(\"There was an error fetching the data:\", error);\n            }\n        };\n\n        fetchData();\n    }, [selectedCardCompany, selectedDate]);\n\n    return (\n        <div className=\"App\">\n            <h1>Data from External JSON File</h1>\n\n            <div>\n                <label>\n                    Select Card Company:\n                    <select value={selectedCardCompany} onChange={(e) => setSelectedCardCompany(e.target.value)}>\n                        <option value=\"CGV\">CGV</option>\n                        <option value=\"CineQ\">CineQ</option>\n                        <option value=\"Moviechart\">Moviechart</option>\n                        <option value=\"Serieson\">Serieson</option>\n                        <option value=\"Megabox\">Megabox</option>\n                        {/* Add more options as needed */}\n                    </select>\n                </label>\n            </div>\n\n            <div>\n                <label>\n                    Select Date:\n                    <input\n                        type=\"date\"\n                        value={selectedDate.toISOString().slice(0, 10)}\n                        onChange={(e) => setSelectedDate(new Date(e.target.value))}\n                    />\n                </label>\n            </div>\n\n            <ul>\n                {data.map((item, index) => (\n                    <li key={index}>\n                        <img src={item.imageURL} alt={item.title} width=\"50\" />\n                        <div>Rank: {item.rank}</div>\n                        <div>Date: {item.date}</div>\n                        <div>Rate: {item.rate}</div>\n                        <div>Title: {item.title}</div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}